<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Constructor

//there can only be one.
if(instance_number(obj_cursor)&gt;1){
    instance_destroy(id,false);
}

image_speed = 0.4;
scr_c_palette_add(0);
l_bound_frame = 0;
u_bound_frame = 7;
flash_frame = 8;

//stealing controls
target_plane = 0; //inst id of the plane about to be stolen
target_prev = 0;
cid = 0; //child id of cursor frame

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lock-out steal button
instance_destroy(cid);
sprite_index = spr_cursor;
l_bound_frame = 0;
u_bound_frame = 7;
flash_frame = 8;
cid = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Advance frame
if(scr_instance_exists(global.player_id) &amp;&amp; global.player_id.alarm[SHOOT_FLASH_ALARM]){
    image_index = flash_frame;
}
else if(image_index&gt;u_bound_frame){
    image_index = l_bound_frame;
}
else if(image_index&lt;l_bound_frame){
    image_index = l_bound_frame;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update position

x = mouse_x;
y = mouse_y;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Steal [RMB] controls

//RMB to enter steal mode
if(mouse_check_button(mb_right)){
    if(instance_number(obj_cursor_frame)==0){
        cid = instance_create(0,0,obj_cursor_frame);
        cid.pid = id;
        sprite_index = spr_c_cursor; 
        l_bound_frame = 0;
        u_bound_frame = 9;
    }
    
}
else{ //key release even when out of window
    if(scr_instance_exists(cid) &amp;&amp; !alarm[0]){
        alarm[0] = global.C_RECOVERY;
        cid.image_index = 1;
    }
}

//Steal plane!
if(mouse_check_button_released(mb_right)){
    if (scr_instance_exists(target_plane) &amp;&amp;
        scr_instance_exists(global.player_id) &amp;&amp;
        target_plane.hp&gt;0 &amp;&amp;
        target_plane.ready_to_steal &amp;&amp;
        global.player_id.object_index==obj_player){
        
        with(global.player_id){
            scr_player_bail(other.target_plane);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cursor held over target plane

//target changed since last frame
if(target_prev != target_plane){
    //reset previous target's on target var
    if(scr_instance_exists(target_prev)){
        target_prev.ready_to_steal = false;
        if(global.AB_USE_CHARGE_STEAL){
            target_prev.locking_on = false;
        }
    }
}

rt_modifier = modifier/256.0;

//target plane is stealable
if (scr_instance_exists(target_plane) &amp;&amp;
    scr_instance_exists(global.player_id) &amp;&amp;
    target_plane.is_stealable){
    
    if(global.AB_USE_CHARGE_STEAL){
        //charge stealing progress...
        target_plane.locking_on = true;
    
        var d, a;
        d = point_distance(global.player_id.x, global.player_id.y, target_plane.x, target_plane.y);
        a = target_plane.steal_progress * d;
        a += global.steal_charge_rate;
        target_plane.steal_progress = min(a/d, 1);
        
        //show target statbox (+player stats to compare)
        if(instance_number(obj_statbox)==0){
            scr_statbox_create(global.player_id,target_plane);
            scr_statbox_create(target_plane,global.player_id);
        }

        if(target_plane.steal_progress==1){
            target_plane.ready_to_steal = true;
        }
    }
    else if(global.AB_USE_ANGLE_STEAL){
        //set ready to steal based on angle of approach
        //NOTE: is_stealable implies angles is array
        if(scr_is_obj_between_angles(global.player_id, target_plane)){
            target_plane.ready_to_steal = true;
            rt_modifier = mk.TINT_GREEN/256.0;
            
            //show target statbox (+player stats to compare)
            if(instance_number(obj_statbox)==0){
                scr_statbox_create(global.player_id,target_plane);
                scr_statbox_create(target_plane,global.player_id);
            }
        }
        else{
            target_plane.ready_to_steal = false;
            rt_modifier = mk.TINT_RED/256.0;
        }
    }
    else{
        target_plane.ready_to_steal = true;
    }
}

//slow down the action if target plane is ready to steal
if(scr_instance_exists(target_plane) &amp;&amp; target_plane.ready_to_steal){
    global.game_speed = max(global.game_speed-global.SLOMO_RATE, global.SLOMO_MIN);
}
else{
    global.game_speed = min(global.game_speed+global.SLOMO_RATE, 1.0);
}

target_prev = target_plane;
//reset target for new frame
target_plane = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw cursor to GUI layer, applying shader
var d_pos;

shader_set(shader_pal_swap);
texture_set_stage(palette_ref, global.palette_texture);
shader_set_uniform_f(row_ref, rt_modifier);
d_pos = scr_game_to_gui(x,y);
draw_sprite(sprite_index,image_index,d_pos[0],d_pos[1]);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Skip drawing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
