<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_plane1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_plane_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Advance frame
scr_plane_advance_frame();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keyboard + mouse controls

if(hp&lt;=0 || !has_pilot || id!=global.player_id) {
    //NOTE: return exits the whole event, not just the code block
    scr_plane_idle();
    return undefined;
}

//buckling dampens turning and disables keyboard+firing
if(sprite_index==spr_plane1_buckle){
    scr_plane_point_turn(mouse_x, mouse_y, false,global.C_TURN_DAMPENER);
    return undefined;
}

//accelerating and braking
if(keyboard_check(global.brake_key)){
    scr_plane_brake();
}
else if(keyboard_check(global.acc_key)){
    scr_plane_boost();
}
else{
    scr_plane_neutral();
}

//commandeering dampens turns and disables firing
if(keyboard_check(global.commandeer_key)){
    scr_plane_point_turn(mouse_x, mouse_y, false,global.C_TURN_DAMPENER);
    return undefined;
}

//turn towards mouse pointer
scr_plane_point_turn(mouse_x, mouse_y, false);

//'LMB' to shoot
if(mouse_check_button_pressed(mb_left)){
    scr_plane_shoot("on_click");
}
if(mouse_check_button(mb_left)){
    scr_plane_shoot("pressed");
}
if(mouse_check_button_released(mb_left)){
    scr_plane_shoot("on_release");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ship_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hack contact dmg
scr_player_contact_hit();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///finish death seq if out of hp; end buckle anim

if(hp&lt;=0){
    if(global.player_id==id){
        scr_set_level("level1");
    }
    else{
        instance_destroy(self);
        part_particles_create(global.partsys,x,y,global.boom_air,1);
    }
}
else if(sprite_index==spr_plane1_buckle){
    sprite_index = spr_plane1;
    if(!has_pilot){
        var pa = point_direction(x,y,global.player_id.x,global.player_id.y);
        scr_plane_gen_weakspot(degtorad(angle_difference(pa,image_angle)));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
